// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in=load ,sel=address ,a=reg0 ,b=reg1 ,c=reg2 ,d=reg3 ,e=reg4 ,f=reg5 ,g=reg6 ,h=reg7);
	Register(in=in ,load=reg0 ,out=TempReg0);
	Register(in=in ,load=reg1 ,out=TempReg1);
	Register(in=in ,load=reg2 ,out=TempReg2);
	Register(in=in ,load=reg3 ,out=TempReg3);
	Register(in=in ,load=reg4 ,out=TempReg4);
	Register(in=in ,load=reg5 ,out=TempReg5);
	Register(in=in ,load=reg6 ,out=TempReg6);
	Register(in=in ,load=reg7 ,out=TempReg7);
	Mux8Way16(a=TempReg0 ,b=TempReg1 ,c=TempReg2 ,d=TempReg3 ,e=TempReg4 ,f=TempReg5 ,g=TempReg6 ,h=TempReg7 ,sel=address ,out=out);
}